%%%%% 
%% クラス図
%%%%% 
%% 参考 : https://mermaid.js.org/syntax/classDiagram.html
%% 
%% Annotations については HTML の特殊文字がうまく扱えなかったため、 HTML エンティティを使用すること
%%   例） &lt;&lt;interface&gt;&gt;
%% サンプル
%% 
%% classDiagram
%%     note "From Duck till Zebra"
%%     Animal <|-- Duck
%%     note for Duck "can fly\ncan swim\ncan dive\ncan help in debugging"
%%     Animal <|-- Fish
%%     Animal <|-- Zebra
%%     Animal : +int age
%%     Animal : +String gender
%%     Animal: +isMammal()
%%     Animal: +mate()
%%     class Duck{
%%         +String beakColor
%%         +swim()
%%         +quack()
%%     }
%%     class Fish{
%%         -int sizeInFeet
%%         -canEat()
%%     }
%%     class Zebra{
%%         +bool is_wild
%%         +run()
%%     }
classDiagram

namespace 計算アプリケーション {

    class レート {
        -int 入力値（ id ）
        -float レート値
        +制約チェック()
    }

    class レートリポジトリインターフェース {
        &lt;&lt;interface&gt;&gt;
        +作成する()
        +参照する()
        +更新する()
        +削除する()
    }

    class 計算サービスインターフェース {
        &lt;&lt;interface&gt;&gt;
        +計算する(入力値) float
    }


}


レートリポジトリインターフェース --> レート

